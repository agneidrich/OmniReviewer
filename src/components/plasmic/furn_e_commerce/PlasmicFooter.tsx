// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: U1qexeZAxKnFPqFFnSEUB
// Component: p6FVu5Eb-V179
import * as React from "react";

import * as p from "@plasmicapp/react-web";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import IconLink from "../../IconLink"; // plasmic-import: j-k2v-NCS2pG9d/component

import { useScreenVariants } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: wH-Eb1OeYquQUw/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";
import * as defaultcss from "../plasmic__default_style.module.css"; // plasmic-import: global/defaultcss
import * as projectcss from "./plasmic_furn_e_commerce.module.css"; // plasmic-import: U1qexeZAxKnFPqFFnSEUB/projectcss
import * as sty from "./PlasmicFooter.module.css"; // plasmic-import: p6FVu5Eb-V179/css

import LocationArrowIcon from "./icons/PlasmicIcon__LocationArrow"; // plasmic-import: i-ZxCuN_GVfMwC/icon
import FacebookIcon from "./icons/PlasmicIcon__Facebook"; // plasmic-import: s_zu2GzZlzxhKA/icon
import InstagramIcon from "./icons/PlasmicIcon__Instagram"; // plasmic-import: hOqprBwRaK7Nwv/icon
import LinkedinIcon from "./icons/PlasmicIcon__Linkedin"; // plasmic-import: rVd6RpNYMzr5HH/icon

export type PlasmicFooter__VariantMembers = {};

export type PlasmicFooter__VariantsArgs = {};
type VariantPropType = keyof PlasmicFooter__VariantsArgs;
export const PlasmicFooter__VariantProps = new Array<VariantPropType>();

export type PlasmicFooter__ArgsType = {};
type ArgPropType = keyof PlasmicFooter__ArgsType;
export const PlasmicFooter__ArgProps = new Array<ArgPropType>();

export type PlasmicFooter__OverridesType = {
  root?: p.Flex<"div">;
  textbox?: p.Flex<"input">;
  button?: p.Flex<"button">;
};

export interface DefaultFooterProps {
  className?: string;
}

function PlasmicFooter__RenderFunc(props: {
  variants: PlasmicFooter__VariantsArgs;
  args: PlasmicFooter__ArgsType;
  overrides: PlasmicFooter__OverridesType;
  dataFetches?: PlasmicFooter__Fetches;
  forNode?: string;
}) {
  const { variants, args, overrides, forNode, dataFetches } = props;

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariants()
  });

  return (
    <div
      data-plasmic-name={"root"}
      data-plasmic-override={overrides.root}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(defaultcss.all, projectcss.root_reset, sty.root)}
    >
      <p.Stack
        as={"div"}
        hasGap={true}
        className={classNames(defaultcss.all, sty.freeBox__fQGpN)}
      >
        <p.Stack
          as={"div"}
          hasGap={true}
          className={classNames(defaultcss.all, sty.freeBox___8Ij0Z)}
        >
          <div
            className={classNames(
              defaultcss.all,
              defaultcss.__wab_text,
              sty.freeBox__vG2U
            )}
          >
            {"Information"}
          </div>

          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(defaultcss.all, sty.freeBox___6Pauc)}
          >
            <a
              className={classNames(
                defaultcss.all,
                defaultcss.__wab_text,
                sty.link__cNZxK
              )}
              href={"#" as const}
            >
              {"About Us"}
            </a>

            <a
              className={classNames(
                defaultcss.all,
                defaultcss.__wab_text,
                sty.link__rbIz2
              )}
              href={"#" as const}
            >
              {"Contact Us"}
            </a>

            <a
              className={classNames(
                defaultcss.all,
                defaultcss.__wab_text,
                sty.link__ng2U
              )}
              href={"#" as const}
            >
              {"News"}
            </a>

            <a
              className={classNames(
                defaultcss.all,
                defaultcss.__wab_text,
                sty.link__s89X7
              )}
              href={"#" as const}
            >
              {"Store"}
            </a>
          </p.Stack>
        </p.Stack>

        <p.Stack
          as={"div"}
          hasGap={true}
          className={classNames(defaultcss.all, sty.freeBox__wd8Qt)}
        >
          <div
            className={classNames(
              defaultcss.all,
              defaultcss.__wab_text,
              sty.freeBox__kuNZk
            )}
          >
            {"Collections"}
          </div>

          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(defaultcss.all, sty.freeBox___9CQAv)}
          >
            <a
              className={classNames(
                defaultcss.all,
                defaultcss.__wab_text,
                sty.link__p0392
              )}
              href={"#" as const}
            >
              {"Wooden Chair"}
            </a>

            <a
              className={classNames(
                defaultcss.all,
                defaultcss.__wab_text,
                sty.link__dOiN3
              )}
              href={"#" as const}
            >
              {"Royal Cloth Sofa"}
            </a>

            <a
              className={classNames(
                defaultcss.all,
                defaultcss.__wab_text,
                sty.link__t8S8N
              )}
              href={"#" as const}
            >
              {"Accent Chair"}
            </a>

            <a
              className={classNames(
                defaultcss.all,
                defaultcss.__wab_text,
                sty.link___1JfwE
              )}
              href={"#" as const}
            >
              {"Bed"}
            </a>

            <a
              className={classNames(
                defaultcss.all,
                defaultcss.__wab_text,
                sty.link__j2CLb
              )}
              href={"#" as const}
            >
              {"Hanging Lamp"}
            </a>
          </p.Stack>
        </p.Stack>

        <p.Stack
          as={"div"}
          hasGap={true}
          className={classNames(defaultcss.all, sty.freeBox__fiQo9)}
        >
          <div
            className={classNames(
              defaultcss.all,
              defaultcss.__wab_text,
              sty.freeBox__rydFh
            )}
          >
            {"My Accounts"}
          </div>

          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(defaultcss.all, sty.freeBox__xbnw)}
          >
            <a
              className={classNames(
                defaultcss.all,
                defaultcss.__wab_text,
                sty.link__dcodj
              )}
              href={"#" as const}
            >
              {"My Account"}
            </a>

            <a
              className={classNames(
                defaultcss.all,
                defaultcss.__wab_text,
                sty.link__lEShz
              )}
              href={"#" as const}
            >
              {"Wishlist"}
            </a>

            <a
              className={classNames(
                defaultcss.all,
                defaultcss.__wab_text,
                sty.link__a5J1
              )}
              href={"#" as const}
            >
              {"Community"}
            </a>

            <a
              className={classNames(
                defaultcss.all,
                defaultcss.__wab_text,
                sty.link__acE9R
              )}
              href={"#" as const}
            >
              {"Order History"}
            </a>

            <a
              className={classNames(
                defaultcss.all,
                defaultcss.__wab_text,
                sty.link__nn3TX
              )}
              href={"#" as const}
            >
              {"My Cart"}
            </a>
          </p.Stack>
        </p.Stack>

        <p.Stack
          as={"div"}
          hasGap={true}
          className={classNames(defaultcss.all, sty.freeBox__lVnm9)}
        >
          <div
            className={classNames(
              defaultcss.all,
              defaultcss.__wab_text,
              sty.freeBox__vt8Gl
            )}
          >
            {"Newsletter"}
          </div>

          <div
            className={classNames(
              defaultcss.all,
              defaultcss.__wab_text,
              sty.freeBox__hIsWx
            )}
          >
            {"Subscribe to get latest news, updates, and information"}
          </div>

          <div className={classNames(defaultcss.all, sty.freeBox___7AmtC)}>
            <input
              data-plasmic-name={"textbox"}
              data-plasmic-override={overrides.textbox}
              className={classNames(defaultcss.input, sty.textbox)}
              placeholder={"Enter Email Here..." as const}
              size={1 as const}
              type={"text" as const}
              value={"" as const}
            />

            <button
              data-plasmic-name={"button"}
              data-plasmic-override={overrides.button}
              className={classNames(defaultcss.button, sty.button)}
            >
              <LocationArrowIcon
                className={classNames(defaultcss.all, sty.svg___2BccS)}
                role={"img"}
              />
            </button>
          </div>
        </p.Stack>
      </p.Stack>

      <p.Stack
        as={"div"}
        hasGap={true}
        className={classNames(defaultcss.all, sty.freeBox__sb1Rx)}
      >
        <p.Stack
          as={"div"}
          hasGap={true}
          className={classNames(defaultcss.all, sty.freeBox__ud5BZ)}
        >
          <IconLink
            className={classNames("__wab_instance", sty.iconLink___5Ytv)}
            icon={
              <FacebookIcon
                className={classNames(defaultcss.all, sty.svg__bimP8)}
                role={"img"}
              />
            }
          />

          <IconLink
            className={classNames("__wab_instance", sty.iconLink__nlRop)}
            icon={
              <InstagramIcon
                className={classNames(defaultcss.all, sty.svg__ccYn4)}
                role={"img"}
              />
            }
          />

          <IconLink
            className={classNames("__wab_instance", sty.iconLink__qUIdu)}
            icon={
              <LinkedinIcon
                className={classNames(defaultcss.all, sty.svg__za8ZH)}
                role={"img"}
              />
            }
          />
        </p.Stack>

        <div className={classNames(defaultcss.all, sty.freeBox__nuTlN)}>
          <div
            className={classNames(
              defaultcss.all,
              defaultcss.__wab_text,
              sty.freeBox__gd9Lt
            )}
          >
            {"© Copyright. "}
          </div>

          <a
            className={classNames(
              defaultcss.all,
              defaultcss.__wab_text,
              sty.link__p6Lmm
            )}
            href={"https://www.plasmic.app/" as const}
          >
            {"Made by Plasmic. "}
          </a>

          <a
            className={classNames(
              defaultcss.all,
              defaultcss.__wab_text,
              sty.link__o75Wr
            )}
            href={"https://www.themesine.com/" as const}
          >
            {"Inspired by Themesine."}
          </a>
        </div>
      </p.Stack>
    </div>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: ["root", "textbox", "button"],
  textbox: ["textbox"],
  button: ["button"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  root: "div";
  textbox: "input";
  button: "button";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicFooter__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicFooter__VariantsArgs;
    args?: PlasmicFooter__ArgsType;
    overrides?: NodeOverridesType<T>;
    dataFetches?: PlasmicFooter__Fetches;
  } & Omit<PlasmicFooter__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicFooter__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicFooter__ArgProps,
      internalVariantPropNames: PlasmicFooter__VariantProps
    });

    const { dataFetches } = props;

    return PlasmicFooter__RenderFunc({
      variants,
      args,
      overrides,
      dataFetches,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicFooter";
  } else {
    func.displayName = `PlasmicFooter.${nodeName}`;
  }
  return func;
}

export const PlasmicFooter = Object.assign(
  // Top-level PlasmicFooter renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    textbox: makeNodeComponent("textbox"),
    button: makeNodeComponent("button"),

    // Metadata about props expected for PlasmicFooter
    internalVariantProps: PlasmicFooter__VariantProps,
    internalArgProps: PlasmicFooter__ArgProps
  }
);

export default PlasmicFooter;
/* prettier-ignore-end */
